import numpy as np
from sklearn.linear_model import LinearRegression

# Представим, что у нас есть данные по температуре, уровню шума и освещенности окружения, 
# а также воздействию на вас (например, уровень комфорта от 1 до 10).
# Замените эти данные на реальные значения из вашего набора данных.

# Пример данных:
temperatures = np.array([20, 25, 30, 35, 40])  # Температуры в градусах Цельсия
noises = np.array([50, 40, 30, 20, 10])  # Уровни шума в децибеллах
illuminations = np.array([100, 200, 300, 400, 500])  # Освещенность в люксах
illuminations2 = np.array([100, 200, 300, 400, 500])
illuminations3 = np.array([100, 200, 300, 400, 500])
impact = np.array([7, 8, 9, 7, 8])  # Воздействие на вас (уровень комфорта от 1 до 10)

# Создаем матрицу признаков X, состоящую из температуры, уровня шума и освещенности
X = np.column_stack((temperatures, noises, illuminations,illuminations2,illuminations3))

# Создаем целевую переменную y, которую мы хотим предсказать (воздействие на вас)
y = impact

# Создаем модель линейной регрессии
model = LinearRegression()

# Обучаем модель на данных
model.fit(X, y)

# Теперь модель готова к использованию для предсказаний.
# Представим, что у нас есть новые данные о температуре, уровне шума и освещенности окружения.
new_data = np.array([[25, 35, 250,300,240]])  # Пример новых данных

# Используем обученную модель для сделать предсказание
predicted_impact = model.predict(new_data)

print(f'Предполагаемое воздействие на вас: {predicted_impact[0]}')


# Например, если модель была обучена на данных, 
# сопоставляющих определенным параметрам воздействие на человека 
# (например, от 1 до 10, где 1 - очень негативное воздействие, а 10 - очень положительное воздействие), 
# то это значение может быть интерпретировано как оценка воздействия на вас.
